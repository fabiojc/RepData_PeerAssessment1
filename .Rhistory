q()
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
install.packages("KernSmooth")
library("KernSmooth")
exit
swirl()
library("swirl")
swirl()
library("swirl")
swirl()
5+7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
c?
?c
?c
z
c
Type c(z, 555, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z * 2 + 1000)
(z * 2 + 1000)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files
args(list.files)
old.dir <- getwd()
setwd("C:/Users/Fabio/Dropbox/Aprendizagem/Data Science Specialization/R Programming")
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$ctime
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", "folder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
bye()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1,
| 2), times = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Fabio")
my_name
paste(my_name, collapse =" ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
Try paste(LETTERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
0
set.seed(1)
rpois(5, 2)
?qpois
?ppois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
source('C:/Users/Fabio/Dropbox/Aprendizagem/Data Science Specialization/Get and Cleaning Data/Project/run_analysis.R')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
setwd("D:/Google_Drive_Fabio/Aprendizagem/Data Science Specialization/Reproducible Research/Project_01/RepData_PeerAssessment1")
data_file <- read.csv("activity.csv")
data_file$date <- as.Date(data_file$date)
data_file2 <- data_file
subtotal2 <- aggregate(steps ~ interval, data_file, mean)
weekday_name <- data.frame(weekdays(data_file2$date))
data_file3 <- cbind(data_file2, weekday_name)
head(data_file3)
?replace
?columns
?column
?col.name
?col.names
?cols.names
?colnames
colnames(weekday_name) <- "weekday"
head(weekday_name)
data_file3 <- cbind(data_file2, weekday_name)
head(data_file3)
data_file2$steps <- ifelse(is.na(data_file2$steps) == TRUE, subtotal2$steps[subtotal2$interval %in% data_file2$interval], data_file2$steps)
data_file3 <- cbind(data_file2, weekday_name)
head(data_file3)
data_file3$weekday[data_file3$weekday == "segunda-feira"] <- "Weekday"
data_file3$weekday <- ifelse(data_file3$weekday == "sabado", "Weekend", data_file3$weekday)
View(weekday_name)
View(weekday_name)
data_file3$weekday <- ifelse(data_file3$weekday == "sabado" || data_file3$weekday == "domingo" , "Weekend", "Weekday")
data_file3
data_file3 <- cbind(data_file2, weekday_name)
data_file3
data_file3$weekday <- ifelse(data_file3$weekday == "segunda-feira" , "Weekday", data_file3$weekday)
data_file3
weekday()
weekdays()
weekdays("2015-08-15")
weekdays(2015-08-15)
weekdays(2015/08/15)
str(data_file3)
data_file3 <- cbind(data_file2, weekday_name)
str(data_file3)
View(weekday_name)
?view
?View
data_file3$weekday <- ifelse(data_file3$weekday == "segunda-feira" || data_file3$weekday == "quarta-feira" ||, "Weekday", data_file3$weekday)
data_file3$weekday <- ifelse(data_file3$weekday == "segunda-feira" || data_file3$weekday == "quarta-feira", "Weekday", data_file3$weekday)
View(data_file3)
View(data_file3)
data_file3 <- cbind(data_file2, weekday_name)
data_file3$weekday <- ifelse(data_file3$weekday == "segunda-feira" || data_file3$weekday == "quarta-feira", "Weekday", data_file3$weekday)
View(weekday_name)
View(data_file3)
Sys.setlocale("LC_TIME", "English")
weekday_name <- data.frame(weekdays(data_file2$date))
View(weekday_name)
colnames(weekday_name) <- "weekday"
class(weekday_name)
View(weekday_name)
weekday_name$weekday[weekday_name$weekday == "Monday"] <- "Weekday"
View(weekday_name)
weekday_name <- data.frame(weekdays(data_file2$date))
colnames(weekday_name) <- "weekday"
class(weekday_name$weekday)
?weekdays
weekday_name[] <- lapply(weekday_name, as.character)
class(weekday_name$weekday)
weekday_name$weekday[weekday_name$weekday == "Monday"] <- "Weekday"
View(weekday_name)
View(weekday_name)
weekday_name <- data.frame(weekdays(data_file2$date))
colnames(weekday_name) <- "weekday"
weekday_name[] <- lapply(weekday_name, as.character)
weekday_name$weekday <- ifelse(weekday_name$weekday == "Saturday" || weekday_name$weekday == "Sunday", "Weekend", "Weekday")
View(weekday_name)
data_file3 <- cbind(data_file2, weekday_name)
head(data_file3)
str(data_file3)
data_file_weekday <- subset(data_file3, weekday=="Weekday")
data_file_weekend <- subset(data_file3, weekday=="Weekend")
weekday_name$weekday <- ifelse((weekday_name$weekday == "Saturday" || weekday_name$weekday == "Sunday"), "Weekend", "Weekday")
View(weekday_name)
str(weekday_name)
weekday_name$weekday <- ifelse(weekday_name$weekday == "Saturday", "Weekend", weekday_name$weekday)
str(weekday_name)
weekday_name <- data.frame(weekdays(data_file2$date))
colnames(weekday_name) <- "weekday"
weekday_name[] <- lapply(weekday_name, as.character)
weekday_name$weekday <- ifelse(weekday_name$weekday == "Saturday", "Weekend", weekday_name$weekday)
str(weekday_name)
rstudio <- (1:2000)
View(rstudio)
View(weekday_name)
View(weekday_name)
View(weekday_name[2000:3000])
utils::View(weekday_name)
weekday_name$weekday[weekday_name$weekday == "Sunday"] <- "Weekend"
utils::View(weekday_name)
weekday_name <- data.frame(weekdays(data_file2$date))
colnames(weekday_name) <- "weekday"
weekday_name[] <- lapply(weekday_name, as.character)
weekday_name$weekday[weekday_name$weekday == "Sunday"] <- "Weekend"
weekday_name$weekday[weekday_name$weekday == "Saturday"] <- "Weekend"
weekday_name$weekday[weekday_name$weekday == "Monday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Tuesday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Wednesday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Thursday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Friday"] <- "Weekday"
data_file3 <- cbind(data_file2, weekday_name)
utils::View(weekday_name)
data_file_weekday <- subset(data_file3, weekday=="Weekday")
data_file_weekend <- subset(data_file3, weekday=="Weekend")
subtotal_data_file_weekday <- aggregate(steps ~ interval, data_file_weekday, mean)
subtotal_data_file_weekend <- aggregate(steps ~ interval, data_file_weekend, mean)
qplot(data_file3$interval, data_file3$steps, geom="line", facets=weekday, main="Average number of steps taken by weekend day", xlab="Day", ylab="Number of steps")
library(ggplot2)
qplot(data_file3$interval, data_file3$steps, geom="line", facets=weekday, main="Average number of steps taken by weekend day", xlab="Day", ylab="Number of steps")
qplot(data_file3$interval, data_file3$steps, geom="line", facets=data_file3$weekday, main="Average number of steps taken by weekend day", xlab="Day", ylab="Number of steps")
View(data_file3)
data_file <- read.csv("activity.csv")
data_file$date <- as.Date(data_file$date)
subtotal2 <- aggregate(steps ~ interval, data_file, mean)
data_file2 <- data_file
## Replacing the missing values
data_file2$steps <- ifelse(is.na(data_file2$steps) == TRUE, subtotal2$steps[subtotal2$interval %in% data_file2$interval], data_file2$steps)
weekday_name <- data.frame(weekdays(data_file2$date))
colnames(weekday_name) <- "weekday"
weekday_name[] <- lapply(weekday_name, as.character)
weekday_name$weekday[weekday_name$weekday == "Sunday"] <- "Weekend"
weekday_name$weekday[weekday_name$weekday == "Saturday"] <- "Weekend"
weekday_name$weekday[weekday_name$weekday == "Monday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Tuesday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Wednesday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Thursday"] <- "Weekday"
weekday_name$weekday[weekday_name$weekday == "Friday"] <- "Weekday"
data_file3 <- cbind(data_file2, weekday_name)
View(weekday_name)
data_file_weekday <- subset(data_file3, weekday=="Weekday")
data_file_weekend <- subset(data_file3, weekday=="Weekend")
subtotal_data_file_weekday <- aggregate(steps ~ interval, data_file_weekday, mean)
subtotal_data_file_weekend <- aggregate(steps ~ interval, data_file_weekend, mean)
qplot(subtotal_data_file_weekend$interval, subtotal_data_file_weekend$steps, geom="line", main="Average number of steps taken by weekend", xlab="Day", ylab="Number of steps")
qplot(subtotal_data_file_weekday$interval, subtotal_data_file_weekday$steps, geom="line", main="Average number of steps taken by weekday", xlab="Day", ylab="Number of steps")
p1 <- qplot(subtotal_data_file_weekend$interval, subtotal_data_file_weekend$steps, geom="line", main="Average number of steps taken by weekend", xlab="Day", ylab="Number of steps")
p2 <- qplot(subtotal_data_file_weekday$interval, subtotal_data_file_weekday$steps, geom="line", main="Average number of steps taken by weekday", xlab="Day", ylab="Number of steps")
plot_grid(p1, p2)
library(gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, nrow=2)
---
title: "Reproducible Research: Peer Assessment 1"
author: "Fábio"
date: "Friday, August 14, 2015"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
